{"version":3,"file":"static/js/745.a244ae63.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/FormComponent/FormComponent.module.css?0b16","components/FormComponent/FormComponent.jsx","webpack://react-homework-template/./src/components/ListComponent/ListComponent.module.css?8061","components/ListComponent/ListComponent.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","Pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"labelName\":\"FormComponent_labelName__ugxPW\",\"labelNumber\":\"FormComponent_labelNumber__qQq0W\",\"formButton\":\"FormComponent_formButton__hWgbp\"};","import css from 'components/FormComponent/FormComponent.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selector';\nimport { addContact } from '../../redux//Operation';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport const FormComponent = () => {\n  const dispatch = useDispatch();\n  const stateContacts = useSelector(selectContacts);\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const contact = {\n      name: form.name.value,\n      number: form.number.value,\n    };\n    console.log(contact);\n    const message = stateContacts.filter(\n      contact => contact.name.toLowerCase() === form.name.value.toLowerCase()\n    );\n\n    if (message.length !== 0) {\n      return (\n        toast.error(form.name.value + ' is already in contacts'), form.reset()\n      );\n    }\n    dispatch(addContact(contact));\n    form.reset();\n  };\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <label htmlFor=\"name\" className={css.labelName}>\n          Name:\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor=\"number\" className={css.labelNumber}>\n          Number\n        </label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\" className={css.formButton}>\n          Add contact\n        </button>\n      </form>\n      <Toaster toastOptions={{ duration: 1500 }} />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ListComponent_contactList__wPEp6\",\"btnContactList\":\"ListComponent_btnContactList__48xyc\",\"loader\":\"ListComponent_loader__aJF36\"};","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { TailSpin } from 'react-loader-spinner';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectIsLoading,\n} from '../../redux/selector.js';\nimport { deleteContact } from '../../redux/Operation.js';\n\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport css from 'components/ListComponent/ListComponent.module.css';\n\nexport const ListComponent = () => {\n  const dispatch = useDispatch();\n\n  const contact = useSelector(selectContacts);\n  const contactFilter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const visiblesContact = contact\n    .filter(contact =>\n      contact.name.toLowerCase().includes(contactFilter.toLowerCase())\n    )\n    .sort((firstName, secondName) =>\n      firstName.name.localeCompare(secondName.name)\n    );\n\n  return (\n    <div>\n      <div className={css.loader}>\n        {isLoading && !error && (\n          <TailSpin\n            height=\"50\"\n            width=\"50\"\n            color=\"#575859\"\n            ariaLabel=\"tail-spin-loading\"\n            radius=\"1\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        )}\n      </div>\n      <ul>\n        {visiblesContact.map(({ name, number, id }) => {\n          return (\n            <li key={id} className={css.contactList}>\n              {name} : {number}\n              <button\n                className={css.btnContactList}\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                ╳\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nListComponent.propTypes = {\n  contacts: propTypes.arrayOf(propTypes.object),\n  onDeleteContact: propTypes.func,\n};\nexport default ListComponent;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport css from 'components/Filter/Filter.module.css';\nimport propTypes from 'prop-types';\nimport { filterContact } from '../../redux/FilterSlice';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleChange = evt => {\n    dispatch(filterContact(evt.target.value));\n  };\n  return (\n    <div>\n      <label className={css.filterLabel} htmlFor=\"filter\">\n        Find contacts by name{' '}\n      </label>\n      <input\n        onChange={handleChange}\n        type=\"text\"\n        name=\"filter\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: propTypes.string,\n  onChange: propTypes.func,\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FormComponent } from '../components/FormComponent/FormComponent';\nimport { ListComponent } from '../components/ListComponent/ListComponent';\nimport { Filter } from '../components/Filter/Filter';\nimport { fetchContacts } from '../redux/Operation';\n\nconst MainPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <FormComponent />\n      <Filter />\n      <ListComponent />\n    </>\n  );\n};\nexport default MainPage;\n"],"names":["FormComponent","dispatch","useDispatch","stateContacts","useSelector","selectContacts","action","onSubmit","evt","preventDefault","form","target","contact","name","value","number","console","log","message","filter","toLowerCase","length","toast","reset","addContact","htmlFor","className","css","type","pattern","title","required","toastOptions","duration","ListComponent","contactFilter","selectFilter","isLoading","selectIsLoading","error","selectError","visiblesContact","includes","sort","firstName","secondName","localeCompare","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","map","id","onClick","deleteContact","Filter","onChange","filterContact","useEffect","fetchContacts"],"sourceRoot":""}